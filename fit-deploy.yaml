apiVersion: v1
kind: Namespace
metadata:
  name: fit-namespace

---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: mongo
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-pv
  namespace: fit-namespace
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: fit-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: fit-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:6
          ports:
            - containerPort: 27017
          args: ["--dbpath", "/data/db"]
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: secret
            - name: MONGODB_FEATURE_COMPABILITY_VERSION
              value: "4.4"
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "mongo-data"
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: fit-namespace
spec:
  selector:
    app: mongodb
  ports:
    - name: mongodb
      protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 32000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-express-deployment
  namespace: fit-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-express
  template:
    metadata:
      labels:
        app: mongodb-express
    spec:
      containers:
        - name: mongodb-express
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: admin
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: secret
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://admin:secret@mongodb-service:27017/fit-dev?authSource=admin
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
  namespace: fit-namespace
spec:
  selector:
    app: mongodb-express
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 32001
  type: NodePort
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: fit-namespace
spec:
  selector:
    matchLabels:
      app: backend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
        - name: backend-container
          image: arthuracrs/fit-backend:1.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
          - name: AUTH_SERVICE_URL
            value: "http:authbackend-service"
          - name: MONGO_URL
            value: mongodb://admin:secret@mongodb-service:27017/fit-dev?authSource=admin

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authbackend-deployment
  namespace: fit-namespace
spec:
  selector:
    matchLabels:
      app: authbackend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: authbackend-app
    spec:
      containers:
        - name: authbackend-container
          image: arthuracrs/fit-auth-service:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
          - name: API_PORT
            value: "3001"
          - name: TOKEN_KEY
            value: "token123fom"
          - name: MONGO_URI
            value: "mongodb://admin:secret@mongodb-service:27017/fit-dev?authSource=admin"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: fit-namespace
spec:
  selector:
    matchLabels:
      app: frontend-app
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
        - name: frontend-container
          image: arthuracrs/fit-front:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
          - name: AUTH_SERVICE_URL
            value: "http:authbackend-service"
          - name: BACKEND_URL
            value: "http:backend-service"

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: fit-namespace
spec:
  selector: 
    app: backend-app
  ports:
    - port: 80
      targetPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: authbackend-service
  namespace: fit-namespace
spec:
  selector: 
    app: authbackend-app
  ports:
    - port: 80
      targetPort: 3001

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: fit-namespace
spec:
  selector: 
    app: frontend-app
  ports:
    - port: 80
      targetPort: 3002

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fit-ingress
  namespace: fit-namespace
spec:
  rules:
  - host: "api.fit.com"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: backend-service
              port:
                number: 80
  - host: "fit.com"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend-service
              port:
                number: 80
  - host: "auth.fit.com"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: authbackend-service
              port:
                number: 80
